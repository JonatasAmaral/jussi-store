{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	// React function component snipet
	"React function main component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "rfmc",
		"body": [
			"import React from \"react\";",
			"",
			"import \"./styles.scss\";",
			"",
			"type PropsType = {",
			"\tchildren?: React.ReactNode;",
			"}",
			"",
			"export function ${TM_DIRECTORY/.*[\\\\|\\/]+(.*)/$1/}(props:PropsType) {",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t$0",
			"\t\t</div>",
			"\t)",
			"}",
			"",
			"export default ${TM_DIRECTORY/.*[\\\\|\\/]+(.*)/$1/}"
		],
		"description": "React function component"
	},
	"React function component": {
		"scope": "javascriptreact,typescriptreact",
		"prefix": "rfc",
		"body": [
			"export function $1(props:$2) {",
			"\treturn (",
			"\t\t<div>",
			"\t\t\t$0",
			"\t\t</div>",
			"\t)",
			"}"
		],
		"description": "React function component"
	}
}
